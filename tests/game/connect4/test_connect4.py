import unittest
from typing import Tuple

from aigames.game.connect4_multi import Connect4Multi
import torch


class TestConnect4(unittest.TestCase):
    def test_is_terminal(self):
        x = 1
        o = -1

        example_state = torch.tensor([
            [[1, 1, 1, 1, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [1, 1, 1, 1, 0, 0, 0]],

            [[0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, -1, -1, -1, -1]],

            [[0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 1, 0],
             [0, 0, 0, 0, 1, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 1, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0]],

            [[0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, -1, 0, 0, 0, 0, 0],
             [0, 0, -1, 0, 0, 0, 0],
             [0, 0, 0, -1, 0, 0, 0],
             [0, 0, 0, 0, -1, 0, 0],
             [0, 0, 0, 0, 0, 0, 0]],

            [[6, 6, 6, 6, 6, 6, 6],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0]],

            [[0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0 ,0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0]],

            [[0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, -1, 0, 0, 0, 0, 0],
             [0, 0, -1, 0, 0, 0, 0],
             [0, 0, 0, -1, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0]],

            [[1, 1, 1, 1, 1, 1, 1],
             [0, 0, 0, 0, 0, 0, 0],
             [0, -1, 0, 0, 0, 0, 0],
             [0, 0, -1, 0, 0, 0, 0],
             [0, 0, 0, -1, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0]],
        ])

        is_terminal = Connect4Multi.is_terminal(example_state)

        expected_rewards = torch.tensor([
            [1.0, 0.0]
        ], dtype=torch.float32)

        torch.testing.assert_close(is_terminal, torch.tensor([True, True, True, True, True, False, False, False]))
